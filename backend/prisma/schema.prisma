generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int            @id @default(autoincrement())
  name             String
  forms            Form[]         @relation("UserToForms")
  sharedForms      SharedForm[]   @relation("UserToSharedForms")
  sentNotifications Notification[] @relation("SenderNotifications")
  receivedNotifications Notification[] @relation("RecipientNotifications")
}

model Form {
  id             Int             @id @default(autoincrement())
  name           String
  userId         Int
  user           User            @relation("UserToForms", fields: [userId], references: [id], onDelete: Cascade)
  sharedForms    SharedForm[]    @relation("FormToSharedForms")
  notifications  Notification[]  @relation("FormToNotifications") // <-- ESTE CAMPO Ã‰ NOVO
}


model SharedForm {
  id     Int  @id @default(autoincrement())
  formId Int
  userId Int
  form   Form @relation("FormToSharedForms", fields: [formId], references: [id], onDelete: Cascade)
  user   User @relation("UserToSharedForms", fields: [userId], references: [id], onDelete: Cascade)
}

model Notification {
  id          Int      @id @default(autoincrement())
  senderId    Int
  recipientId Int
  formId      Int
  message     String
  delivered   Boolean  @default(false)
  read        Boolean  @default(false)
  createdAt   DateTime @default(now())

  sender      User     @relation("SenderNotifications", fields: [senderId], references: [id], onDelete: Cascade)
  recipient   User     @relation("RecipientNotifications", fields: [recipientId], references: [id], onDelete: Cascade)
  form        Form     @relation("FormToNotifications", fields: [formId], references: [id], onDelete: Cascade)
}
